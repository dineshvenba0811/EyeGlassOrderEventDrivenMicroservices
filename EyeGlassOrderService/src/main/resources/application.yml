spring:
  application:
    name: orderservice

  datasource:
    url: jdbc:postgresql://localhost:5432/order_service
    username: postgres
    password: postgres

  jpa:
    hibernate:
      ddl-auto: create

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: order-placed
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        schema.registry.url: http://localhost:8085
    consumer:
      group-id: order-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        # delegate actual JSON deserialization to JsonDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.banyan.smartDocuments.EyeGlassOrderService.dto.OrderStatusUpdatedEvent
      listener:
        missing-topics-fatal: false

logging:
  level:
    org:
      springframework:
        web: DEBUG
        security: DEBUG

server:
  port: 8088

jwt:
  secret: "change-me-32+chars-random"   # same value everywhere
  expiration-ms: 3600000

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true